#!/bin/sh
#
# Refresh the site's content
#

umask 0002

set -eu

# Terminate displaying the specified error message
error()
{
  echo '[Error]' "$@" 1>&2
  exit 1
}

# See if used attributes (first argument)
# are valid according to given file (second argument)
# e.g validate_content_field 'category' 'doc/valid_categories'
# Where 'doc/valid_categories' has a valid value in every line
validate_content_field()
{
  if ! find content -type f |
  xargs grep -h '^'$1':' |
  sed 's/[ \r]*$//' |
  sort -u |
  diff $2 -; then
    error "Invalid $1 used; see above"
  fi
}

# Check if all the files in the given folder (first argument)
# have all the attributes listed in the given file (second argument)
# e.g check_required_fields 'content/members' 'doc/required_member_fields'
# Where 'doc/required_seminar_fields' has required fields, in every line
check_required_fields()
{
    find $1 -type f |
    while IFS= read -r file; do
      while IFS= read -r field || [ -n "${field}" ]; do
        grep "^$field" $file > /dev/null || error "Missing field: $field in file $file"
      done < $2
    done
}

if [ $(whoami) = www-data ] ; then
  BASE=/var/www/balab/web-contents

  mkdir -p $BASE/lists
  { awk '/^email:/{print $2}' content/members/*
    cat content/mail-extra
  } >$BASE/lists/balab.txt
else
  BASE=balab
fi

rm -rf $BASE/stage
mkdir -p $BASE/stage

validate_content_field 'category' 'doc/valid_categories'
validate_content_field 'member_category' 'doc/valid_member_categories'

# Check for large images
ls -l content/images/ | awk '$5 > 500000 {print "File larger than limit of 500 kB:", $9; exit 1}' || error 'Overly large file found; please fix and update again!'

# Check for common errors in publications
grep -iHn 'doi.*=.*https://doi\.org' content/pubs.bib && error 'DOIs should not include a URL'
grep -iHn '^[ 	]*year.*=[ 	]*{{' content/pubs.bib && error 'Years should not be specified with double braces'
grep -iHn '^[ 	]*doi[ 	]=' content/pubs.bib && error 'Specify XEdoi rather than DOI'
grep -iHn '^[ 	]*url[ 	]*=' content/pubs.bib && error 'Specify XEurl rather than URL'

check_required_fields content/members doc/required_member_fields || error "Could not read required member fields"
check_required_fields content/seminars doc/required_seminar_fields || error "Could not read required seminar fields"

# Create and activate the required Python environment
if ! [ -d venv ] ; then
  python3 -m venv venv
  . venv/bin/activate
  pip install pelican markdown typogrify pybtex
else
  . venv/bin/activate
fi

# Cross-platform file size function
get_file_size() {
    if [ "$(uname)" = "Darwin" ]; then
		stat -f %z "$1"
    else
        stat -c %s "$1"
    fi
}

pelican content/ --output=$BASE/stage

# Copy static content
cp -r static/* $BASE/stage

#Sanity check
if test $(get_file_size $BASE/stage/category/members.html) -gt 15000 ; then
  echo "Members: OK"
else
 error "File $BASE/stage/category/members.html appears truncated, please check members file and update again!"
fi

if test $(get_file_size $BASE/stage/category/software.html) -gt 7000 ; then
  echo "Software: OK"
else
 error "File $BASE/stage/category/software.html appears truncated, please check software file and update again!"
fi

if test $(get_file_size $BASE/stage/category/projects.html) -gt 10000 ; then
  echo "Projects: OK"
else
 error "File $BASE/stage/category/projects.html appears truncated, please check projects file and update again!"
fi

if test $(get_file_size $BASE/stage/category/alumni.html) -gt 10000 ; then
  echo "Alumni: OK"
else
 error "File $BASE/stage/category/alumni.html appears truncated, please check alumni file and update again!"
fi

if test $(get_file_size $BASE/stage/category/seminars.html) -gt 9000 ; then
  echo "Seminars: OK"
else
 error "File $BASE/stage/category/seminars.html appears truncated, please check the seminars files and update again!"
fi

if test $(get_file_size $BASE/stage/category/yearly-reports.html) -gt 5000 ; then
  echo "Yearly reports: OK"
else
 error "File $BASE/stage/category/yearly-reports.html appears truncated, please check yearly-reports file and update again!"
fi

if [ $(whoami) = www-data ] ; then
  # Deploy
  rm -rf $BASE/old
  test -d $BASE/deploy && mv $BASE/deploy $BASE/old
  mv $BASE/stage $BASE/deploy
fi
